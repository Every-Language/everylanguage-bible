name: CI Pipeline

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  CACHE_DEPENDENCY_PATH: package-lock.json

jobs:
  # Job 1: Code Quality & Tests (Combined for efficiency)
  quality-and-tests:
    name: Code Quality & Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}

      - name: Install dependencies
        run: npm ci

      - name: ESLint
        run: npm run lint

      - name: Prettier check
        run: npm run format:check

      - name: TypeScript check
        run: npm run type-check

      - name: Run tests
        run: npm test -- --coverage --watchAll=false --passWithNoTests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: success()
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  # Job 2: Expo Validation (Managed Workflow)
  expo-validation:
    name: Expo Configuration Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Expo doctor
        run: npx expo-doctor

      - name: Validate Expo configuration
        run: npx expo config --type introspect

      - name: Check for managed workflow compatibility
        run: |
          # Ensure no native folders exist
          if [ -d "android" ] || [ -d "ios" ]; then
            echo "❌ Native folders detected - should not exist in managed workflow"
            exit 1
          fi
          echo "✅ Managed workflow validated" 